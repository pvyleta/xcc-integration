name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Lint with flake8 (optional)
      run: |
        # Install flake8 for basic linting
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
      
    - name: Test with pytest
      run: |
        pytest test/ -v --tb=short
        
    - name: Test CLI functionality
      run: |
        # Test that the CLI can be imported and shows help
        python xcc_cli.py --help
        
    - name: Test shell script
      run: |
        # Make shell script executable and test basic functionality
        chmod +x xcc
        # Test help (this will fail if controller connection is required, but should show usage)
        ./xcc --help || echo "Shell script help test completed"

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8
        
    - name: Check code formatting with black
      run: |
        black --check --diff .
      continue-on-error: true
      
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .
      continue-on-error: true
      
    - name: Lint with flake8
      run: |
        flake8 . --count --max-line-length=127 --statistics
      continue-on-error: true
