name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff linter
        run: ruff check .

      - name: Run Ruff formatter
        run: ruff format --check .

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run tests
        run: pytest tests/ -v --cov=custom_components/xcc --cov-report=xml

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  syntax-check:
    name: Python Syntax Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Check Python syntax
        run: |
          python -m py_compile custom_components/xcc/*.py
          python -m py_compile tests/*.py

  home-assistant-check:
    name: Home Assistant Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Home Assistant
        run: |
          python -m pip install --upgrade pip
          pip install homeassistant

      - name: Check integration loads
        run: |
          python -c "
          import sys
          sys.path.insert(0, '.')
          try:
              from custom_components.xcc import DOMAIN
              print(f'✅ Integration domain: {DOMAIN}')
              from custom_components.xcc.coordinator import XCCDataUpdateCoordinator
              print('✅ Coordinator imports successfully')
              from custom_components.xcc.xcc_client import XCCClient
              print('✅ XCC client imports successfully')
              print('✅ All core components import successfully')
          except Exception as e:
              print(f'❌ Import error: {e}')
              sys.exit(1)
          "
